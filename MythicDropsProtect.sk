#name: MythicDropsProtect  by FallenGundam
#version: v1.0.1
#date: 2022/4/7
#required:
    #paper or spigot 1.13.2~1.18.2 
    #mythicmobs 4.9~4.11 (i'm not sure)
    #skript 2.3.7 - lastest
    #skript-reflect
#dc: FallenGundam#8864



options:
    blacklist: "&cWolrdBoss" or "&bWorldBoss2"
    keyword: &c*



import:
    io.lumine.xikage.mythicmobs.MythicMobs
    io.lumine.xikage.mythicmobs.api.bukkit.events.MythicMobDeathEvent
    io.lumine.xikage.mythicmobs.api.bukkit.events.MythicMobDespawnEvent

    org.bukkit.event.player.PlayerPickupItemEvent

on PlayerPickupItemEvent:
    set {_meta} to event.getItem().getItemStack().getItemMeta()
    set {_player} to event.getPlayer()
    set {_playername} to "%{_player}%".toLowerCase()
    if {_meta}.getDisplayName().contains("{@keyword}"):
        if {_meta}.getDisplayName().contains({_playername}):
            set {_itname} to {_meta}.getDisplayName()
            replace all "{@keyword}&7[&a%{_playername}%&7] " with "" in {_itname}
            {_meta}.setDisplayName({_itname})
            event.getItem().getItemStack().setItemMeta({_meta})
        else:
            event.setCancelled(true)

on MythicMobDespawnEvent:
    set {_uuid} to event.getEntity().getUniqueId()
    if {mob_damage::%{_uuid}%::*} is set:
        clear {mob_damage::%{_uuid}%::*}

on MythicMobDeathEvent:
    set {_uuid} to event.getEntity().getUniqueId()
    set {_p} to event.getKiller()
    if {mob_damage::%{_uuid}%::*} is set:
        set {_maxvalue} to 0
        set {_maxplayer} to ""
        loop {mob_damage::%{_uuid}%::*}:
            if loop-value > {_maxvalue}:
                set {_maxvalue} to loop-value
                set {_maxplayer} to loop-index
        set {_items} to event.getDrops()

        loop {_items}.size() times:
            set {_index} to (loop-value)-1
            set {_itemmeta} to {_items}.get({_index}).getItemMeta()
            set {_itemname} to {_itemmeta}.getDisplayName()
            {_itemmeta}.setDisplayName("{@keyword}&7[&a%{_maxplayer}%&7] %{_itemname}%")

            event.getDrops().get({_index}).setItemMeta({_itemmeta})

        delete {mob_damage::%{_uuid}%::*}

on damage:
    if attacker is player:
        if victim isn't player:
            if name of victim isn't {@blacklist}:
                if MythicMobs.inst().getAPIHelper().isMythicMob(victim) = true:
                    set {_uuid} to victim's uuid
                    if {mob_damage::%{_uuid}%::%attacker%} isn't set:
                        set {mob_damage::%{_uuid}%::%attacker%} to 0
                    if damage > victim's health:
                        add victim's health to {mob_damage::%{_uuid}%::%attacker%}
                    else:
                        add damage to {mob_damage::%{_uuid}%::%attacker%}
                    #broadcast "%attacker% : %{mob_damage::%{_uuid}%::%attacker%}*2%"
on skript unload:
    delete {mob_damage::*}


